	pcie_avmm u0 (
		.clk_clk                      (<connected-to-clk_clk>),                      //           clk.clk
		.coreclkout_clk               (<connected-to-coreclkout_clk>),               //    coreclkout.clk
		.cra_chipselect               (<connected-to-cra_chipselect>),               //           cra.chipselect
		.cra_address                  (<connected-to-cra_address>),                  //              .address
		.cra_byteenable               (<connected-to-cra_byteenable>),               //              .byteenable
		.cra_read                     (<connected-to-cra_read>),                     //              .read
		.cra_readdata                 (<connected-to-cra_readdata>),                 //              .readdata
		.cra_write                    (<connected-to-cra_write>),                    //              .write
		.cra_writedata                (<connected-to-cra_writedata>),                //              .writedata
		.cra_waitrequest              (<connected-to-cra_waitrequest>),              //              .waitrequest
		.crairq_irq                   (<connected-to-crairq_irq>),                   //        crairq.irq
		.hip_ctrl_test_in             (<connected-to-hip_ctrl_test_in>),             //      hip_ctrl.test_in
		.hip_ctrl_simu_mode_pipe      (<connected-to-hip_ctrl_simu_mode_pipe>),      //              .simu_mode_pipe
		.hip_pipe_sim_pipe_pclk_in    (<connected-to-hip_pipe_sim_pipe_pclk_in>),    //      hip_pipe.sim_pipe_pclk_in
		.hip_pipe_sim_pipe_rate       (<connected-to-hip_pipe_sim_pipe_rate>),       //              .sim_pipe_rate
		.hip_pipe_sim_ltssmstate      (<connected-to-hip_pipe_sim_ltssmstate>),      //              .sim_ltssmstate
		.hip_pipe_eidleinfersel0      (<connected-to-hip_pipe_eidleinfersel0>),      //              .eidleinfersel0
		.hip_pipe_powerdown0          (<connected-to-hip_pipe_powerdown0>),          //              .powerdown0
		.hip_pipe_rxpolarity0         (<connected-to-hip_pipe_rxpolarity0>),         //              .rxpolarity0
		.hip_pipe_txcompl0            (<connected-to-hip_pipe_txcompl0>),            //              .txcompl0
		.hip_pipe_txdata0             (<connected-to-hip_pipe_txdata0>),             //              .txdata0
		.hip_pipe_txdatak0            (<connected-to-hip_pipe_txdatak0>),            //              .txdatak0
		.hip_pipe_txdetectrx0         (<connected-to-hip_pipe_txdetectrx0>),         //              .txdetectrx0
		.hip_pipe_txelecidle0         (<connected-to-hip_pipe_txelecidle0>),         //              .txelecidle0
		.hip_pipe_txswing0            (<connected-to-hip_pipe_txswing0>),            //              .txswing0
		.hip_pipe_txmargin0           (<connected-to-hip_pipe_txmargin0>),           //              .txmargin0
		.hip_pipe_txdeemph0           (<connected-to-hip_pipe_txdeemph0>),           //              .txdeemph0
		.hip_pipe_phystatus0          (<connected-to-hip_pipe_phystatus0>),          //              .phystatus0
		.hip_pipe_rxdata0             (<connected-to-hip_pipe_rxdata0>),             //              .rxdata0
		.hip_pipe_rxdatak0            (<connected-to-hip_pipe_rxdatak0>),            //              .rxdatak0
		.hip_pipe_rxelecidle0         (<connected-to-hip_pipe_rxelecidle0>),         //              .rxelecidle0
		.hip_pipe_rxstatus0           (<connected-to-hip_pipe_rxstatus0>),           //              .rxstatus0
		.hip_pipe_rxvalid0            (<connected-to-hip_pipe_rxvalid0>),            //              .rxvalid0
		.hip_serial_rx_in0            (<connected-to-hip_serial_rx_in0>),            //    hip_serial.rx_in0
		.hip_serial_tx_out0           (<connected-to-hip_serial_tx_out0>),           //              .tx_out0
		.hip_status_derr_cor_ext_rcv  (<connected-to-hip_status_derr_cor_ext_rcv>),  //    hip_status.derr_cor_ext_rcv
		.hip_status_derr_cor_ext_rpl  (<connected-to-hip_status_derr_cor_ext_rpl>),  //              .derr_cor_ext_rpl
		.hip_status_derr_rpl          (<connected-to-hip_status_derr_rpl>),          //              .derr_rpl
		.hip_status_dlup_exit         (<connected-to-hip_status_dlup_exit>),         //              .dlup_exit
		.hip_status_ltssmstate        (<connected-to-hip_status_ltssmstate>),        //              .ltssmstate
		.hip_status_ev128ns           (<connected-to-hip_status_ev128ns>),           //              .ev128ns
		.hip_status_ev1us             (<connected-to-hip_status_ev1us>),             //              .ev1us
		.hip_status_hotrst_exit       (<connected-to-hip_status_hotrst_exit>),       //              .hotrst_exit
		.hip_status_int_status        (<connected-to-hip_status_int_status>),        //              .int_status
		.hip_status_l2_exit           (<connected-to-hip_status_l2_exit>),           //              .l2_exit
		.hip_status_lane_act          (<connected-to-hip_status_lane_act>),          //              .lane_act
		.hip_status_ko_cpl_spc_header (<connected-to-hip_status_ko_cpl_spc_header>), //              .ko_cpl_spc_header
		.hip_status_ko_cpl_spc_data   (<connected-to-hip_status_ko_cpl_spc_data>),   //              .ko_cpl_spc_data
		.irq_irq                      (<connected-to-irq_irq>),                      //           irq.irq
		.irq_rcvr_clk_clk             (<connected-to-irq_rcvr_clk_clk>),             //  irq_rcvr_clk.clk
		.irq_rcvr_rst_reset           (<connected-to-irq_rcvr_rst_reset>),           //  irq_rcvr_rst.reset
		.m0_waitrequest               (<connected-to-m0_waitrequest>),               //            m0.waitrequest
		.m0_readdata                  (<connected-to-m0_readdata>),                  //              .readdata
		.m0_readdatavalid             (<connected-to-m0_readdatavalid>),             //              .readdatavalid
		.m0_burstcount                (<connected-to-m0_burstcount>),                //              .burstcount
		.m0_writedata                 (<connected-to-m0_writedata>),                 //              .writedata
		.m0_address                   (<connected-to-m0_address>),                   //              .address
		.m0_write                     (<connected-to-m0_write>),                     //              .write
		.m0_read                      (<connected-to-m0_read>),                      //              .read
		.m0_byteenable                (<connected-to-m0_byteenable>),                //              .byteenable
		.m0_debugaccess               (<connected-to-m0_debugaccess>),               //              .debugaccess
		.m0_clk_clk                   (<connected-to-m0_clk_clk>),                   //        m0_clk.clk
		.m0_rst_reset                 (<connected-to-m0_rst_reset>),                 //        m0_rst.reset
		.m1_waitrequest               (<connected-to-m1_waitrequest>),               //            m1.waitrequest
		.m1_readdata                  (<connected-to-m1_readdata>),                  //              .readdata
		.m1_readdatavalid             (<connected-to-m1_readdatavalid>),             //              .readdatavalid
		.m1_burstcount                (<connected-to-m1_burstcount>),                //              .burstcount
		.m1_writedata                 (<connected-to-m1_writedata>),                 //              .writedata
		.m1_address                   (<connected-to-m1_address>),                   //              .address
		.m1_write                     (<connected-to-m1_write>),                     //              .write
		.m1_read                      (<connected-to-m1_read>),                      //              .read
		.m1_byteenable                (<connected-to-m1_byteenable>),                //              .byteenable
		.m1_debugaccess               (<connected-to-m1_debugaccess>),               //              .debugaccess
		.m1_clk_clk                   (<connected-to-m1_clk_clk>),                   //        m1_clk.clk
		.m1_rst_reset                 (<connected-to-m1_rst_reset>),                 //        m1_rst.reset
		.m2_waitrequest               (<connected-to-m2_waitrequest>),               //            m2.waitrequest
		.m2_readdata                  (<connected-to-m2_readdata>),                  //              .readdata
		.m2_readdatavalid             (<connected-to-m2_readdatavalid>),             //              .readdatavalid
		.m2_burstcount                (<connected-to-m2_burstcount>),                //              .burstcount
		.m2_writedata                 (<connected-to-m2_writedata>),                 //              .writedata
		.m2_address                   (<connected-to-m2_address>),                   //              .address
		.m2_write                     (<connected-to-m2_write>),                     //              .write
		.m2_read                      (<connected-to-m2_read>),                      //              .read
		.m2_byteenable                (<connected-to-m2_byteenable>),                //              .byteenable
		.m2_debugaccess               (<connected-to-m2_debugaccess>),               //              .debugaccess
		.m2_clk_clk                   (<connected-to-m2_clk_clk>),                   //        m2_clk.clk
		.m2_rst_reset                 (<connected-to-m2_rst_reset>),                 //        m2_rst.reset
		.npor_npor                    (<connected-to-npor_npor>),                    //          npor.npor
		.npor_pin_perst               (<connected-to-npor_pin_perst>),               //              .pin_perst
		.nreset_status_reset_n        (<connected-to-nreset_status_reset_n>),        // nreset_status.reset_n
		.reconfig_clk_clk             (<connected-to-reconfig_clk_clk>),             //  reconfig_clk.clk
		.reconfig_rst_reset           (<connected-to-reconfig_rst_reset>),           //  reconfig_rst.reset
		.refclk_clk                   (<connected-to-refclk_clk>),                   //        refclk.clk
		.reset_reset_n                (<connected-to-reset_reset_n>),                //         reset.reset_n
		.rxmirq_irq                   (<connected-to-rxmirq_irq>),                   //        rxmirq.irq
		.rxmirq_out_irq               (<connected-to-rxmirq_out_irq>),               //    rxmirq_out.irq
		.txs_chipselect               (<connected-to-txs_chipselect>),               //           txs.chipselect
		.txs_byteenable               (<connected-to-txs_byteenable>),               //              .byteenable
		.txs_readdata                 (<connected-to-txs_readdata>),                 //              .readdata
		.txs_writedata                (<connected-to-txs_writedata>),                //              .writedata
		.txs_read                     (<connected-to-txs_read>),                     //              .read
		.txs_write                    (<connected-to-txs_write>),                    //              .write
		.txs_burstcount               (<connected-to-txs_burstcount>),               //              .burstcount
		.txs_readdatavalid            (<connected-to-txs_readdatavalid>),            //              .readdatavalid
		.txs_waitrequest              (<connected-to-txs_waitrequest>),              //              .waitrequest
		.txs_address                  (<connected-to-txs_address>)                   //              .address
	);

