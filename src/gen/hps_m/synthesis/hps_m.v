// hps_m.v

// Generated using ACDS version 18.1 625

`timescale 1 ps / 1 ps
module hps_m (
		output wire        hps_io_hps_io_emac1_inst_TX_CLK, //     hps_io.hps_io_emac1_inst_TX_CLK
		output wire        hps_io_hps_io_emac1_inst_TXD0,   //           .hps_io_emac1_inst_TXD0
		output wire        hps_io_hps_io_emac1_inst_TXD1,   //           .hps_io_emac1_inst_TXD1
		output wire        hps_io_hps_io_emac1_inst_TXD2,   //           .hps_io_emac1_inst_TXD2
		output wire        hps_io_hps_io_emac1_inst_TXD3,   //           .hps_io_emac1_inst_TXD3
		input  wire        hps_io_hps_io_emac1_inst_RXD0,   //           .hps_io_emac1_inst_RXD0
		inout  wire        hps_io_hps_io_emac1_inst_MDIO,   //           .hps_io_emac1_inst_MDIO
		output wire        hps_io_hps_io_emac1_inst_MDC,    //           .hps_io_emac1_inst_MDC
		input  wire        hps_io_hps_io_emac1_inst_RX_CTL, //           .hps_io_emac1_inst_RX_CTL
		output wire        hps_io_hps_io_emac1_inst_TX_CTL, //           .hps_io_emac1_inst_TX_CTL
		input  wire        hps_io_hps_io_emac1_inst_RX_CLK, //           .hps_io_emac1_inst_RX_CLK
		input  wire        hps_io_hps_io_emac1_inst_RXD1,   //           .hps_io_emac1_inst_RXD1
		input  wire        hps_io_hps_io_emac1_inst_RXD2,   //           .hps_io_emac1_inst_RXD2
		input  wire        hps_io_hps_io_emac1_inst_RXD3,   //           .hps_io_emac1_inst_RXD3
		inout  wire        hps_io_hps_io_qspi_inst_IO0,     //           .hps_io_qspi_inst_IO0
		inout  wire        hps_io_hps_io_qspi_inst_IO1,     //           .hps_io_qspi_inst_IO1
		inout  wire        hps_io_hps_io_qspi_inst_IO2,     //           .hps_io_qspi_inst_IO2
		inout  wire        hps_io_hps_io_qspi_inst_IO3,     //           .hps_io_qspi_inst_IO3
		output wire        hps_io_hps_io_qspi_inst_SS0,     //           .hps_io_qspi_inst_SS0
		output wire        hps_io_hps_io_qspi_inst_CLK,     //           .hps_io_qspi_inst_CLK
		input  wire        hps_io_hps_io_uart0_inst_RX,     //           .hps_io_uart0_inst_RX
		output wire        hps_io_hps_io_uart0_inst_TX,     //           .hps_io_uart0_inst_TX
		inout  wire        hps_io_hps_io_gpio_inst_GPIO44,  //           .hps_io_gpio_inst_GPIO44
		output wire [15:0] memory_mem_a,                    //     memory.mem_a
		output wire [2:0]  memory_mem_ba,                   //           .mem_ba
		output wire        memory_mem_ck,                   //           .mem_ck
		output wire        memory_mem_ck_n,                 //           .mem_ck_n
		output wire        memory_mem_cke,                  //           .mem_cke
		output wire        memory_mem_cs_n,                 //           .mem_cs_n
		output wire        memory_mem_ras_n,                //           .mem_ras_n
		output wire        memory_mem_cas_n,                //           .mem_cas_n
		output wire        memory_mem_we_n,                 //           .mem_we_n
		output wire        memory_mem_reset_n,              //           .mem_reset_n
		inout  wire [31:0] memory_mem_dq,                   //           .mem_dq
		inout  wire [3:0]  memory_mem_dqs,                  //           .mem_dqs
		inout  wire [3:0]  memory_mem_dqs_n,                //           .mem_dqs_n
		output wire        memory_mem_odt,                  //           .mem_odt
		output wire [3:0]  memory_mem_dm,                   //           .mem_dm
		input  wire        memory_oct_rzqin,                //           .oct_rzqin
		input  wire [28:0] sdram0_address,                  //     sdram0.address
		input  wire [7:0]  sdram0_burstcount,               //           .burstcount
		output wire        sdram0_waitrequest,              //           .waitrequest
		output wire [63:0] sdram0_readdata,                 //           .readdata
		output wire        sdram0_readdatavalid,            //           .readdatavalid
		input  wire        sdram0_read,                     //           .read
		input  wire [63:0] sdram0_writedata,                //           .writedata
		input  wire [7:0]  sdram0_byteenable,               //           .byteenable
		input  wire        sdram0_write,                    //           .write
		input  wire        sdram0_clk_clk,                  // sdram0_clk.clk
		input  wire [28:0] sdram1_address,                  //     sdram1.address
		input  wire [7:0]  sdram1_burstcount,               //           .burstcount
		output wire        sdram1_waitrequest,              //           .waitrequest
		output wire [63:0] sdram1_readdata,                 //           .readdata
		output wire        sdram1_readdatavalid,            //           .readdatavalid
		input  wire        sdram1_read,                     //           .read
		input  wire [63:0] sdram1_writedata,                //           .writedata
		input  wire [7:0]  sdram1_byteenable,               //           .byteenable
		input  wire        sdram1_write,                    //           .write
		input  wire        sdram1_clk_clk                   // sdram1_clk.clk
	);

	hps_m_hps #(
		.F2S_Width (0),
		.S2F_Width (0)
	) hps (
		.mem_a                    (memory_mem_a),                    //           memory.mem_a
		.mem_ba                   (memory_mem_ba),                   //                 .mem_ba
		.mem_ck                   (memory_mem_ck),                   //                 .mem_ck
		.mem_ck_n                 (memory_mem_ck_n),                 //                 .mem_ck_n
		.mem_cke                  (memory_mem_cke),                  //                 .mem_cke
		.mem_cs_n                 (memory_mem_cs_n),                 //                 .mem_cs_n
		.mem_ras_n                (memory_mem_ras_n),                //                 .mem_ras_n
		.mem_cas_n                (memory_mem_cas_n),                //                 .mem_cas_n
		.mem_we_n                 (memory_mem_we_n),                 //                 .mem_we_n
		.mem_reset_n              (memory_mem_reset_n),              //                 .mem_reset_n
		.mem_dq                   (memory_mem_dq),                   //                 .mem_dq
		.mem_dqs                  (memory_mem_dqs),                  //                 .mem_dqs
		.mem_dqs_n                (memory_mem_dqs_n),                //                 .mem_dqs_n
		.mem_odt                  (memory_mem_odt),                  //                 .mem_odt
		.mem_dm                   (memory_mem_dm),                   //                 .mem_dm
		.oct_rzqin                (memory_oct_rzqin),                //                 .oct_rzqin
		.hps_io_emac1_inst_TX_CLK (hps_io_hps_io_emac1_inst_TX_CLK), //           hps_io.hps_io_emac1_inst_TX_CLK
		.hps_io_emac1_inst_TXD0   (hps_io_hps_io_emac1_inst_TXD0),   //                 .hps_io_emac1_inst_TXD0
		.hps_io_emac1_inst_TXD1   (hps_io_hps_io_emac1_inst_TXD1),   //                 .hps_io_emac1_inst_TXD1
		.hps_io_emac1_inst_TXD2   (hps_io_hps_io_emac1_inst_TXD2),   //                 .hps_io_emac1_inst_TXD2
		.hps_io_emac1_inst_TXD3   (hps_io_hps_io_emac1_inst_TXD3),   //                 .hps_io_emac1_inst_TXD3
		.hps_io_emac1_inst_RXD0   (hps_io_hps_io_emac1_inst_RXD0),   //                 .hps_io_emac1_inst_RXD0
		.hps_io_emac1_inst_MDIO   (hps_io_hps_io_emac1_inst_MDIO),   //                 .hps_io_emac1_inst_MDIO
		.hps_io_emac1_inst_MDC    (hps_io_hps_io_emac1_inst_MDC),    //                 .hps_io_emac1_inst_MDC
		.hps_io_emac1_inst_RX_CTL (hps_io_hps_io_emac1_inst_RX_CTL), //                 .hps_io_emac1_inst_RX_CTL
		.hps_io_emac1_inst_TX_CTL (hps_io_hps_io_emac1_inst_TX_CTL), //                 .hps_io_emac1_inst_TX_CTL
		.hps_io_emac1_inst_RX_CLK (hps_io_hps_io_emac1_inst_RX_CLK), //                 .hps_io_emac1_inst_RX_CLK
		.hps_io_emac1_inst_RXD1   (hps_io_hps_io_emac1_inst_RXD1),   //                 .hps_io_emac1_inst_RXD1
		.hps_io_emac1_inst_RXD2   (hps_io_hps_io_emac1_inst_RXD2),   //                 .hps_io_emac1_inst_RXD2
		.hps_io_emac1_inst_RXD3   (hps_io_hps_io_emac1_inst_RXD3),   //                 .hps_io_emac1_inst_RXD3
		.hps_io_qspi_inst_IO0     (hps_io_hps_io_qspi_inst_IO0),     //                 .hps_io_qspi_inst_IO0
		.hps_io_qspi_inst_IO1     (hps_io_hps_io_qspi_inst_IO1),     //                 .hps_io_qspi_inst_IO1
		.hps_io_qspi_inst_IO2     (hps_io_hps_io_qspi_inst_IO2),     //                 .hps_io_qspi_inst_IO2
		.hps_io_qspi_inst_IO3     (hps_io_hps_io_qspi_inst_IO3),     //                 .hps_io_qspi_inst_IO3
		.hps_io_qspi_inst_SS0     (hps_io_hps_io_qspi_inst_SS0),     //                 .hps_io_qspi_inst_SS0
		.hps_io_qspi_inst_CLK     (hps_io_hps_io_qspi_inst_CLK),     //                 .hps_io_qspi_inst_CLK
		.hps_io_uart0_inst_RX     (hps_io_hps_io_uart0_inst_RX),     //                 .hps_io_uart0_inst_RX
		.hps_io_uart0_inst_TX     (hps_io_hps_io_uart0_inst_TX),     //                 .hps_io_uart0_inst_TX
		.hps_io_gpio_inst_GPIO44  (hps_io_hps_io_gpio_inst_GPIO44),  //                 .hps_io_gpio_inst_GPIO44
		.h2f_rst_n                (),                                //        h2f_reset.reset_n
		.f2h_sdram0_clk           (sdram0_clk_clk),                  // f2h_sdram0_clock.clk
		.f2h_sdram0_ADDRESS       (sdram0_address),                  //  f2h_sdram0_data.address
		.f2h_sdram0_BURSTCOUNT    (sdram0_burstcount),               //                 .burstcount
		.f2h_sdram0_WAITREQUEST   (sdram0_waitrequest),              //                 .waitrequest
		.f2h_sdram0_READDATA      (sdram0_readdata),                 //                 .readdata
		.f2h_sdram0_READDATAVALID (sdram0_readdatavalid),            //                 .readdatavalid
		.f2h_sdram0_READ          (sdram0_read),                     //                 .read
		.f2h_sdram0_WRITEDATA     (sdram0_writedata),                //                 .writedata
		.f2h_sdram0_BYTEENABLE    (sdram0_byteenable),               //                 .byteenable
		.f2h_sdram0_WRITE         (sdram0_write),                    //                 .write
		.f2h_sdram1_clk           (sdram1_clk_clk),                  // f2h_sdram1_clock.clk
		.f2h_sdram1_ADDRESS       (sdram1_address),                  //  f2h_sdram1_data.address
		.f2h_sdram1_BURSTCOUNT    (sdram1_burstcount),               //                 .burstcount
		.f2h_sdram1_WAITREQUEST   (sdram1_waitrequest),              //                 .waitrequest
		.f2h_sdram1_READDATA      (sdram1_readdata),                 //                 .readdata
		.f2h_sdram1_READDATAVALID (sdram1_readdatavalid),            //                 .readdatavalid
		.f2h_sdram1_READ          (sdram1_read),                     //                 .read
		.f2h_sdram1_WRITEDATA     (sdram1_writedata),                //                 .writedata
		.f2h_sdram1_BYTEENABLE    (sdram1_byteenable),               //                 .byteenable
		.f2h_sdram1_WRITE         (sdram1_write)                     //                 .write
	);

endmodule
